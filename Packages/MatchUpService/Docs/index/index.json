{"interfaceLanguages":{"swift":[{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/eight","title":"case eight","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/five","title":"case five","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/four","title":"case four","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/nine","title":"case nine","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/one","title":"case one","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/seven","title":"case seven","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/six","title":"case six","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/ten","title":"case ten","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/three","title":"case three","type":"case"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/matchupservice\/atiebreakpoints\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/matchupservice\/atiebreakpoints\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/matchupservice\/atiebreakpoints\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/matchupservice\/atiebreakpoints","title":"ATiebreakPoints","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/deucetype\/normaldeuce","title":"case normalDeuce","type":"case"},{"path":"\/documentation\/matchupservice\/deucetype\/onedeuce","title":"case oneDeuce","type":"case"},{"path":"\/documentation\/matchupservice\/deucetype\/suddendeath","title":"case suddenDeath","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/deucetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/deucetype\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/deucetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/matchupservice\/deucetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/deucetype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/deucetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/deucetype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/matchupservice\/deucetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/matchupservice\/deucetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/matchupservice\/deucetype","title":"DeuceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofgames\/eight","title":"case eight","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/five","title":"case five","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/four","title":"case four","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/nine","title":"case nine","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/one","title":"case one","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/seven","title":"case seven","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/six","title":"case six","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/ten","title":"case ten","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/three","title":"case three","type":"case"},{"path":"\/documentation\/matchupservice\/numberofgames\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofgames\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofgames\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofgames\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/matchupservice\/numberofgames\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofgames\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofgames\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofgames\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/matchupservice\/numberofgames\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/matchupservice\/numberofgames\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/matchupservice\/numberofgames","title":"NumberOfGames","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofsets\/five","title":"case five","type":"case"},{"path":"\/documentation\/matchupservice\/numberofsets\/one","title":"case one","type":"case"},{"path":"\/documentation\/matchupservice\/numberofsets\/three","title":"case three","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofsets\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofsets\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofsets\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/matchupservice\/numberofsets\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofsets\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofsets\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/matchupservice\/numberofsets\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/matchupservice\/numberofsets\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/matchupservice\/numberofsets\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/matchupservice\/numberofsets","title":"NumberOfSets","type":"enum"}],"path":"\/documentation\/matchupservice","title":"MatchUpService","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}