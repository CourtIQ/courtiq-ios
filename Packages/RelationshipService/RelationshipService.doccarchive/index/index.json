{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshipservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshipservice\/acceptfriendrequest(request:)","title":"func acceptFriendRequest(request: RelationshipRequest) async throws","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshipservice\/fetchfriends(userid:)","title":"func fetchFriends(userId: String) async throws -> [Relationship]","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshipservice\/fetchmutualfriends(userid1:userid2:)","title":"func fetchMutualFriends(userId1: String, userId2: String) async throws -> [Relationship]","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshipservice\/removefriend(currentuserid:frienduserid:)","title":"func removeFriend(currentUserId: String, friendUserId: String) async throws","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshipservice\/sendfriendrequest(from:to:)","title":"func sendFriendRequest(from: String, to: String) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshipservice\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/relationshipservice\/relationshipservice\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/relationshipservice\/relationshipservice","title":"RelationshipService","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshipserviceprotocol\/acceptfriendrequest(request:)","title":"func acceptFriendRequest(request: RelationshipRequest) async throws","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshipserviceprotocol\/fetchfriends(userid:)","title":"func fetchFriends(userId: String) async throws -> [Relationship]","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshipserviceprotocol\/fetchmutualfriends(userid1:userid2:)","title":"func fetchMutualFriends(userId1: String, userId2: String) async throws -> [Relationship]","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshipserviceprotocol\/removefriend(currentuserid:frienduserid:)","title":"func removeFriend(currentUserId: String, friendUserId: String) async throws","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshipserviceprotocol\/sendfriendrequest(from:to:)","title":"func sendFriendRequest(from: String, to: String) async throws","type":"method"}],"path":"\/documentation\/relationshipservice\/relationshipserviceprotocol","title":"RelationshipServiceProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationship\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/relationshipservice\/relationship\/init(relateduserid:relationshiptype:relatedusername:relateduserprofilepicture:createdat:updatedat:)","title":"init(relatedUserID: String, relationshipType: RelationshipType, relatedUserName: String?, relatedUserProfilePicture: URL?, createdAt: Date, updatedAt: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationship\/createdat","title":"var createdAt: Date","type":"property"},{"path":"\/documentation\/relationshipservice\/relationship\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/relationshipservice\/relationship\/relateduserid","title":"var relatedUserID: String","type":"property"},{"path":"\/documentation\/relationshipservice\/relationship\/relatedusername","title":"var relatedUserName: String?","type":"property"},{"path":"\/documentation\/relationshipservice\/relationship\/relateduserprofilepicture","title":"var relatedUserProfilePicture: URL?","type":"property"},{"path":"\/documentation\/relationshipservice\/relationship\/relationshiptype","title":"var relationshipType: RelationshipType","type":"property"},{"path":"\/documentation\/relationshipservice\/relationship\/updatedat","title":"var updatedAt: Date","type":"property"}],"path":"\/documentation\/relationshipservice\/relationship","title":"Relationship","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/init(senderid:receiverid:requesttype:sendername:senderprofilepicture:receivername:receiverprofilepicture:createdat:)","title":"init(senderID: String, receiverID: String, requestType: RelationshipType, senderName: String?, senderProfilePicture: URL?, receiverName: String?, receiverProfilePicture: URL?, createdAt: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/createdat","title":"var createdAt: Date","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/receiverid","title":"var receiverID: String","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/receivername","title":"var receiverName: String?","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/receiverprofilepicture","title":"var receiverProfilePicture: URL?","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/requesttype","title":"var requestType: RelationshipType","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/senderid","title":"var senderID: String","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/sendername","title":"var senderName: String?","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiprequest\/senderprofilepicture","title":"var senderProfilePicture: URL?","type":"property"}],"path":"\/documentation\/relationshipservice\/relationshiprequest","title":"RelationshipRequest","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/coach","title":"case coach","type":"case"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/friend","title":"case friend","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/relationshipservice\/relationshiptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/relationshipservice\/relationshiptype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/relationshipservice\/relationshiptype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/relationshipservice\/relationshiptype","title":"RelationshipType","type":"enum"}],"path":"\/documentation\/relationshipservice","title":"RelationshipService","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}